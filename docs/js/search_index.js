var search_data = {"index":{"searchIndex":["uuid","clockresolutionerror","error","version4","version6","version7","version8","batch()","batch_v4()","batch_v6()","batch_v7()","generate()","generate()","generate()","generate()","max_uuid()","new()","new()","new()","new()","nil_uuid()","reset!()","reset_v4!()","reset_v6!()","reset_v7!()","v4()","v6()","v7()","verify_clock_resolution!()","verify_clock_resolution!()","changelog","license","readme"],"longSearchIndex":["uuid","uuid::clockresolutionerror","uuid::error","uuid::version4","uuid::version6","uuid::version7","uuid::version8","uuid::batch()","uuid::batch_v4()","uuid::batch_v6()","uuid::batch_v7()","uuid::version4#generate()","uuid::version6#generate()","uuid::version7#generate()","uuid::version8#generate()","uuid::max_uuid()","uuid::version4::new()","uuid::version6::new()","uuid::version7::new()","uuid::version8::new()","uuid::nil_uuid()","uuid::version6#reset!()","uuid::reset_v4!()","uuid::reset_v6!()","uuid::reset_v7!()","uuid::v4()","uuid::v6()","uuid::v7()","uuid::version6::verify_clock_resolution!()","uuid::version7::verify_clock_resolution!()","","",""],"info":[["Uuid","","Uuid.html","","<p>The Uuid module contains a simple API to generate v4, v6, and v7 UUIDs without needing to create generators …\n"],["Uuid::ClockResolutionError","","Uuid/ClockResolutionError.html","","<p>Raised when the clock resolution is insufficient for a UUID Version.\n"],["Uuid::Error","","Uuid/Error.html","","<p>Top-level error for all Uuid errors.\n"],["Uuid::Version4","","Uuid/Version4.html","","<p>UUID Version 7 defined by the RFC 4122 BIS-01 Draft.\n<p>To construct a new UUID v4 value create a generator, …\n"],["Uuid::Version6","","Uuid/Version6.html","","<p>UUID Version 6 defined by the RFC 4122 BIS-01 Draft.\n<p>To construct a new UUID v6 value create a generator, …\n"],["Uuid::Version7","","Uuid/Version7.html","","<p>UUID Version 7 defined by the RFC 4122 BIS-01 Draft.\n<p>To construct a new UUID v7 value create a generator, …\n"],["Uuid::Version8","","Uuid/Version8.html","","<p>UUID Version 8 defined by the RFC 4122 BIS-01 Draft.\n<p>Since UUID v8 is entirely custom to your application, …\n"],["batch","Uuid","Uuid.html#method-c-batch","(generator, amount)","<p>Create a batch of UUIDs from a generator.\n<p>This can be useful for custom Version8 generators.\n"],["batch_v4","Uuid","Uuid.html#method-c-batch_v4","(amount)","<p>Create a batch of UUID v4 values using the default generator.\n"],["batch_v6","Uuid","Uuid.html#method-c-batch_v6","(amount)","<p>Create a batch of UUID v6 values using the default generator.\n"],["batch_v7","Uuid","Uuid.html#method-c-batch_v7","(amount)","<p>Create a batch of UUID v7 values using the default generator.\n"],["generate","Uuid::Version4","Uuid/Version4.html#method-i-generate","()","<p>Construct a UUID v4 value.\n"],["generate","Uuid::Version6","Uuid/Version6.html#method-i-generate","()","<p>Construct a UUID v6 value.\n"],["generate","Uuid::Version7","Uuid/Version7.html#method-i-generate","()","<p>Construct a UUID v7 value.\n"],["generate","Uuid::Version8","Uuid/Version8.html#method-i-generate","()","<p>Construct a UUID v8 value.\n"],["max_uuid","Uuid","Uuid.html#method-c-max_uuid","()","<p>The maximum UUID as defined by §5.10 of RFC 4122 BIS-01.\n<p>This UUID is written as <code>ffffffff-ffff-ffff-ffff-ffffffffffff</code> …\n"],["new","Uuid::Version4","Uuid/Version4.html#method-c-new","()","<p>Construct a UUID v4 generator.\n"],["new","Uuid::Version6","Uuid/Version6.html#method-c-new","()","<p>Construct a new UUID v6 generator.\n"],["new","Uuid::Version7","Uuid/Version7.html#method-c-new","()","<p>Construct a UUID v7 generator.\n"],["new","Uuid::Version8","Uuid/Version8.html#method-c-new","(definition_class)","<p>Construct a UUID v8 generator.\n"],["nil_uuid","Uuid","Uuid.html#method-c-nil_uuid","()","<p>The nil UUID as defined by §5.10 of RFC 4122 BIS-01.\n<p>This UUID is written as <code>00000000-0000-0000-0000-000000000000</code> …\n"],["reset!","Uuid::Version6","Uuid/Version6.html#method-i-reset-21","()","<p>Reset the generator with a new random node ID and clock sequence.\n<p>This method is not thread-safe and should …\n"],["reset_v4!","Uuid","Uuid.html#method-c-reset_v4-21","()","<p>Reset the UUID v4 default generator.\n"],["reset_v6!","Uuid","Uuid.html#method-c-reset_v6-21","()","<p>Reset the UUID v6 default generator.\n"],["reset_v7!","Uuid","Uuid.html#method-c-reset_v7-21","()","<p>Reset the UUID v7 default generator.\n"],["v4","Uuid","Uuid.html#method-c-v4","()","<p>Generate a new UUID v4 value using the default generator.\n"],["v6","Uuid","Uuid.html#method-c-v6","()","<p>Generate a new UUID v6 value using the default generator.\n"],["v7","Uuid","Uuid.html#method-c-v7","()","<p>Generate a new UUID v7 value using the default generator.\n"],["verify_clock_resolution!","Uuid::Version6","Uuid/Version6.html#method-c-verify_clock_resolution-21","()","<p>Verify that the clock resolution is capable of 100ns resolution.\n<p>Raises ClockResolutionError when the …\n"],["verify_clock_resolution!","Uuid::Version7","Uuid/Version7.html#method-c-verify_clock_resolution-21","()","<p>Verify that the clock resolution is capable of 1ms resolution.\n<p>Raises ClockResolutionError when the clock …\n"],["CHANGELOG","","CHANGELOG_md.html","","<p>Unreleased\n<p>Stable Releases\n<p>1.0.0 – ???\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2023 Stephan Tarulli\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>What’s in the box?\n<p>✅ Simple usage documentation written to get started fast. 30 seconds and you’re …\n"]]}}